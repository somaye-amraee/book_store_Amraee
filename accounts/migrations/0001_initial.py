# Generated by Django 3.2.4 on 2021-08-16 13:13

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=200, verbose_name='استان')),
                ('city', models.CharField(max_length=200, verbose_name='شهر')),
                ('street', models.CharField(max_length=200, verbose_name='خیابان1')),
                ('street_2', models.CharField(max_length=200, verbose_name='خیابان2')),
                ('detail_adress', models.CharField(blank=True, max_length=200, null=True, verbose_name='جزییات آدرس')),
                ('postal_code', models.CharField(max_length=100, verbose_name='کد پستی')),
            ],
            options={
                'verbose_name': 'ادرس',
                'verbose_name_plural': 'ادرس ها',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=250, null=True, unique=True, verbose_name='ایمیل')),
                ('is_customer', models.BooleanField(default=False, verbose_name='مشتری')),
                ('is_staff', models.BooleanField(default=False, verbose_name='کارمند')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='ادمین')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='نام')),
                ('last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='نام خانوادگی')),
                ('company', models.CharField(max_length=200)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('fax', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='آخرین ورود')),
                ('address', models.ManyToManyField(to='accounts.Address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
